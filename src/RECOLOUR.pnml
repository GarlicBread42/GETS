//###################
//### Recolour Map###
//###################

//Code for recolour map by Emperor Jake/JPplus Engines under GPL v2

//BULK  Recolour sprites for cargo

recolour_bulk = reserve_sprites(27);

replace(recolour_bulk) {

//Fallback 0
    recolour_sprite {
        0xE5: 0x90;
        0xE8: 0x91;
        0xE9: 0x92;
        0xEA: 0x93;
        0xEB: 0x94;
        0xEC: 0x95;
        0xED: 0x96;
        0xEE: 0x97;
//fallback piece
        0x88: 0x06;
        0x89: 0x07;
        0x8A: 0x08;
        0x8B: 0x09;
        0x8C: 0x0A;
        0x8D: 0x0B;
        0x8E: 0x0C;
        0x8F: 0x0D;
    }
//grain 1
    recolour_sprite {
        0xE5: 0x3F;
        0xE8: 0x40;
        0xE9: 0x41;
        0xEA: 0x42;
        0xEB: 0x43;
        0xEC: 0x33;
        0xED: 0x44;
        0xEE: 0x34;
    }
//iore 2
	recolour_sprite {
        0xE5: 0x46;
        0xE8: 0x47;
        0xE9: 0x48;
        0xEA: 0x49;
        0xEB: 0x4A;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x4D;
    }
//sulp 3
    recolour_sprite {
        0xE5: 0x40;
        0xE8: 0x41;
        0xE9: 0x57;
        0xEA: 0x5E;
        0xEB: 0x42;
        0xEC: 0x32;
        0xED: 0x5F;
        0xEE: 0x34;
    }
//sand 4
    recolour_sprite {
        0xE5: 0x6F;
        0xE8: 0x3A;
        0xE9: 0x1E;
        0xEA: 0x3B;
        0xEB: 0x26;
        0xEC: 0x1F;
        0xED: 0x27;
        0xEE: 0xA8;
    }
//bauxite 5
    recolour_sprite {
        0xE5: 0x48;
        0xE8: 0x2B;
        0xE9: 0x4A;
        0xEA: 0x2C;
        0xEB: 0xA2;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x75;
    }
//copper ore 6
    recolour_sprite {
        0xE5: 0x18;
        0xE8: 0x19;
        0xE9: 0x36;
        0xEA: 0x1A;
        0xEB: 0x37;
        0xEC: 0x38;
        0xED: 0x39;
        0xEE: 0x1D;
    }
//fertiliser 7
    recolour_sprite {
        0xE5: 0x69;
        0xE8: 0x35;
        0xE9: 0x6B;
        0xEA: 0x6C;
        0xEB: 0x6D;
        0xEC: 0x6E;
        0xED: 0x6F;
        0xEE: 0x3A;
    }
//clay 8
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x22;
        0xE9: 0x6D;
        0xEA: 0x4C;
        0xEB: 0x75;
        0xEC: 0x76;
        0xED: 0x4F;
        0xEE: 0x26;
    }
//oil seeds 9
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x6D;
        0xE9: 0x38;
        0xEA: 0x5C;
        0xEB: 0x6F;
        0xEC: 0x5E;
        0xED: 0x3B;
        0xEE: 0x26;
    }
//limestone 10
    recolour_sprite {
        0xE5: 0x08;
        0xE8: 0x0A;
        0xE9: 0x1E;
        0xEA: 0x0B;
        0xEB: 0x3B;
        0xEC: 0x0C;
        0xED: 0x0D;
        0xEE: 0x0E;
    }
//potash 11
    recolour_sprite {
        0xE5: 0x16;
        0xE8: 0x17;
        0xE9: 0x0D;
        0xEA: 0x87;
        0xEB: 0x0E;
        0xEC: 0xD2;
        0xED: 0x0F;
        0xEE: 0x0F;
    }
//gravel 12
    recolour_sprite {
        0xE5: 0x07;
        0xE8: 0x08;
        0xE9: 0x09;
        0xEA: 0x0A;
        0xEB: 0x0B;
        0xEC: 0x0C;
        0xED: 0x0D;
        0xEE: 0x0E;
    }
//coal 13
    recolour_sprite {
        0xE5: 0x01;
        0xE8: 0x01;
        0xE9: 0x02;
        0xEA: 0x02;
        0xEB: 0x03;
        0xEC: 0x03;
        0xED: 0x04;
        0xEE: 0x04;
    }
//fruit 14
    recolour_sprite {
        0xE5: 0x03;
        0xE8: 0x04;
        0xE9: 0x1D;
        0xEA: 0x40;
        0xEB: 0xC2;
        0xEC: 0x42;
        0xED: 0x5F;
        0xEE: 0x43;
    }
//scrap 15
    recolour_sprite {
        0xE5: 0x02;
        0xE8: 0x03;
        0xE9: 0x7B;
        0xEA: 0x11;
        0xEB: 0x13;
        0xEC: 0x4C;
        0xED: 0x16;
        0xEE: 0x17;
    }
//sugar beet 16
    recolour_sprite {
        0xE5: 0x36;
        0xE8: 0x69;
        0xE9: 0x5C;
        0xEA: 0x6D;
        0xEB: 0x3B;
        0xEC: 0x1A;
        0xED: 0x6C;
        0xEE: 0x35;
    }
//sugar cane 17
    recolour_sprite {
        0xE5: 0x60;
        0xE8: 0x69;
        0xE9: 0x55;
        0xEA: 0x53;
        0xEB: 0x51;
        0xEC: 0x59;
        0xED: 0x50;
        0xEE: 0x40;
    }
//coffee 18
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x6A;
        0xE9: 0x60;
        0xEA: 0x69;
        0xEB: 0x46;
        0xEC: 0x5C;
        0xED: 0x3C;
        0xEE: 0x47;
    }
//waste 19
    recolour_sprite {
        0xE5: 0x02;
        0xE8: 0x03;
        0xE9: 0x59;
        0xEA: 0x35;
        0xEB: 0x37;
        0xEC: 0x5C;
        0xED: 0x16;
        0xEE: 0x1E;
    }
//building mat 20
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x69;
        0xE9: 0x6A;
        0xEA: 0x6B;
        0xEB: 0x6C;
        0xEC: 0x6D;
        0xED: 0x6E;
        0xEE: 0x6F;
	//piece	
        0x88: 0x72;
        0x89: 0x73;
        0x8A: 0x74;
        0x8B: 0x75;
        0x8C: 0x76;
        0x8D: 0x77;
        0x8E: 0x78;
        0x8F: 0x79;
    }
//fibre crops 21
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x35;
        0xE9: 0x36;
        0xEA: 0x37;
        0xEB: 0x38;
        0xEC: 0x39;
        0xED: 0x3A;
        0xEE: 0x3B;
	//piece	
        0x88: 0x08;
        0x89: 0x09;
        0x8A: 0x0A;
        0x8B: 0x0B;
        0x8C: 0x0C;
        0x8D: 0x0D;
        0x8E: 0x0E;
        0x8F: 0x0F;

    }
//slag 22
    recolour_sprite {
        0xE5: 0x01;
        0xE8: 0x01;
        0xE9: 0xE9;
        0xEA: 0x02;
        0xEB: 0xED;
        0xEC: 0x03;
        0xED: 0x04;
        0xEE: 0x05;
    }
//phosphate 23
    recolour_sprite {
        0xE5: 0x6F;
        0xE8: 0x3A;
        0xE9: 0x84;
        0xEA: 0x3B;
        0xEB: 0x85;
        0xEC: 0x1F;
        0xED: 0x86;
        0xEE: 0xA8;
    }
//salt 24
    recolour_sprite {
        0xE5: 0x0A;
        0xE8: 0x0A;
        0xE9: 0x0B;
        0xEA: 0x0C;
        0xEB: 0x0D;
        0xEC: 0x0E;
        0xED: 0x0F;
        0xEE: 0x0F;
    }
//uranium 25
    recolour_sprite {
        0xE5: 0x0A;
        0xE8: 0xCE;
        0xE9: 0xCF;
        0xEA: 0xD0;
        0xEB: 0xD1;
        0xEC: 0x5E;
        0xED: 0x5F;
        0xEE: 0x67;
    }
	
//kaol/lithium 26
    recolour_sprite {
        0xE5: 0x0B;
        0xE8: 0x0C;
        0xE9: 0x9E;
        0xEA: 0x0D;
        0xEB: 0x9F;
        0xEC: 0xA0;
        0xED: 0x0E;
        0xEE: 0xA1;
    }
}


//PIECE GOODS  Recolour sprites for cargo

recolour_piece = reserve_sprites(10);

replace(recolour_piece) {

//mid grey 0
    recolour_sprite {
        0x88: 0x06;
        0x89: 0x07;
        0x8A: 0x08;
        0x8B: 0x09;
        0x8C: 0x0A;
        0x8D: 0x0B;
        0x8E: 0x0C;
        0x8F: 0x0D;
    }
//light grey 1 
    recolour_sprite {
        0x88: 0x08;
        0x89: 0x09;
        0x8A: 0x0A;
        0x8B: 0x0B;
        0x8C: 0x0C;
        0x8D: 0x0D;
        0x8E: 0x0E;
        0x8F: 0x0F;
    }
//dark grey 2 
    recolour_sprite {
        0x88: 0x03;
        0x89: 0x04;
        0x8A: 0x05;
        0x8B: 0x06;
        0x8C: 0x07;
        0x8D: 0x08;
        0x8E: 0x09;
        0x8F: 0x0A;
    }
//bluish grey 3
    recolour_sprite {
        0x88: 0x10;
        0x89: 0x11;
        0x8A: 0x12;
        0x8B: 0x13;
        0x8C: 0x14;
        0x8D: 0x15;
        0x8E: 0x16;
        0x8F: 0x17;
    }
//copper 4
    recolour_sprite {
        0x88: 0x72;
        0x89: 0x73;
        0x8A: 0x74;
        0x8B: 0x75;
        0x8C: 0x76;
        0x8D: 0x77;
        0x8E: 0x78;
        0x8F: 0x79;
    }
//light blue 5
    recolour_sprite {
        0x88: 0x9A;
        0x89: 0x9B;
        0x8A: 0x9C;
        0x8B: 0x9D;
        0x8C: 0x9E;
        0x8D: 0x9F;
        0x8E: 0xA0;
        0x8F: 0xA1;
    }
//light green 6
    recolour_sprite {
        0x88: 0x60;
        0x89: 0x61;
        0x8A: 0x62;
        0x8B: 0x63;
        0x8C: 0x64;
        0x8D: 0x65;
        0x8E: 0x66;
        0x8F: 0x67;
    }
//reddish brown 7
    recolour_sprite {
        0x88: 0x46;
        0x89: 0x47;
        0x8A: 0x48;
        0x8B: 0x49;
        0x8C: 0x4A;
        0x8D: 0x4B;
        0x8E: 0x4C;
        0x8F: 0x4D;
    }
//wood brown 8
    recolour_sprite {
        0x88: 0x68;
        0x89: 0x69;
        0x8A: 0x6A;
        0x8B: 0x6B;
        0x8C: 0x6C;
        0x8D: 0x6D;
        0x8E: 0x6E;
        0x8F: 0x6F;
	//wood as bulk		
        0xE5: 0x68;
        0xE8: 0x69;
        0xE9: 0x6A;
        0xEA: 0x6B;
        0xEB: 0x6C;
        0xEC: 0x6D;
        0xED: 0x6E;
        0xEE: 0x6F;
    }
 	
//cream 9
    recolour_sprite {
        0x88: 0x20;
        0x89: 0x21;
        0x8A: 0x22;
        0x8B: 0x23;
        0x8C: 0x24;
        0x8D: 0x25;
        0x8E: 0x26;
        0x8F: 0x27;
    }
}


//########################
//### Recolour Callback###
//########################

//Code also by EmperorJake//JpplusEngines

switch(FEAT_TRAINS, SELF, switch_piece_recolour, cargo_type_in_veh) {
//PIECE
	STEL: return recolour_piece +3;
	IRON: return recolour_piece +7;
	METL: return recolour_piece ;
	COPR: return recolour_piece +4;
	ZINC: return recolour_piece +5;
	ENSP: return recolour_piece +5;
	FMSP: return recolour_piece +6;
	MNSP: return recolour_piece +1;
	VPTS: return recolour_piece +2;
	PIPE: return recolour_piece +3;
	WDPR: return recolour_piece +9;

	WOOL: return recolour_piece +1;
	GLAS: return recolour_piece +5;
//	BDMT: return recolour_piece +4;
	BRCK: return recolour_piece +4;
	GOOD: return recolour_piece +6;
	PAPR: return recolour_piece +1;
	WOOD: return recolour_piece +8;
	
	STST: return recolour_piece +1;
	STSE: return recolour_piece ;
	STSH: return recolour_piece ;
	STWR: return recolour_piece +2;
	STAL: return recolour_piece +5;
	TYRE: return recolour_piece +2;
	STCB: return recolour_piece +2;
	
	TWOD: return recolour_piece +8;
	SESP: return recolour_piece +5;
	MPTS: return recolour_piece +2;
	FURN: return recolour_piece +9;
	POWR: return recolour_piece +2;
	TEXT: return recolour_piece +9;
	URAN: return recolour_piece +6;

//FAKE BULK
	BDMT: return recolour_bulk +20;
	FICR: return recolour_bulk +21;

	SCMT: return recolour_bulk +15;
    SULP: return recolour_bulk +3;
	SEED: return recolour_bulk +9;
    FERT: return recolour_bulk +7;
	SASH: return recolour_bulk +10;
	
    FRUT: return recolour_bulk +14;
    FRVG: return recolour_bulk +14;
    
    KAOL: return recolour_bulk +24;
}

switch(FEAT_TRAINS, SELF, switch_bulk_recolour, cargo_type_in_veh) {
	GRAI: return recolour_bulk +1;
	CERE: return recolour_bulk +1;
	MAIZ: return recolour_bulk +1;	
	WHEA: return recolour_bulk +1;
	
	IORE: return recolour_bulk +2;
	PORE: return recolour_bulk +2;

    SULP: return recolour_bulk +3;

    SAND: return recolour_bulk +4;
	NITR: return recolour_bulk +4;

    AORE: return recolour_bulk +5;

	CORE: return recolour_bulk +6;
	NICK: return recolour_bulk +6;

    FERT: return recolour_bulk +7;
	
	TOFF: return recolour_bulk +7;
	
	CLAY: return recolour_bulk +8;

    OLSD: return recolour_bulk +9;
	BEAN: return recolour_bulk +9;
	SEED: return recolour_bulk +9;
	
    LIME: return recolour_bulk +10;
	SASH: return recolour_bulk +10;

    POTA: return recolour_bulk +11;
	QLME: return recolour_bulk +11;

    GRVL: return recolour_bulk +12;
    FECR: return recolour_bulk +12;
	CMNT: return recolour_bulk +12;

    COAL: return recolour_bulk +13;
	COKE: return recolour_bulk +13;
	CBLK: return recolour_bulk +13;
	MNO2: return recolour_bulk +13;
	
    FRUT: return recolour_bulk +14;
    FRVG: return recolour_bulk +14;
	
    SCMT: return recolour_bulk +15;	

    SGBT: return recolour_bulk +16;
	CASS: return recolour_bulk +16;
	TATO: return recolour_bulk +16;
	
    SGCN: return recolour_bulk +17;
	TWOD: return recolour_bulk +17;
	
    JAVA: return recolour_bulk +18;	
	PEAT: return recolour_bulk +18;
	NUTS: return recolour_bulk +18;
	
	RCYC: return recolour_bulk +19;
	WSTE: return recolour_bulk +19;
	
	BDMT: return recolour_bulk +20;
	WOOD: return recolour_bulk +20;
	
	FICR: return recolour_bulk +21;
	
	SLAG: return recolour_bulk +22;
	
	PHOS: return recolour_bulk +23;

	SALT: return recolour_bulk +24;
	BAKE: return recolour_bulk +24;
	SUGR: return recolour_bulk +24;
			

	
	URAN: return recolour_bulk +25;

	

//FALLBACK BLUE
    recolour_bulk; //blue
}

switch(FEAT_TRAINS, SELF, switch_generic_recolour2, hasbit(cargo_classes, CC_COVERED)) {
	0: switch_piece_recolour;
        switch_bulk_recolour;}

switch(FEAT_TRAINS, SELF, switch_generic_recolour, hasbit(cargo_classes, CC_BULK)) {
	0: switch_generic_recolour2;
        switch_bulk_recolour;}
